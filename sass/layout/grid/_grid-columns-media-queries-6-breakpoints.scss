// (xs) Extra Small
@media (max-width: $xs-upper-bound) {
	.grid-fixed-height {
		.col-xs-1-1,
		.col-xs-1-2:nth-child(2n+1),
		.col-xs-1-3:nth-child(3n+1),
		.col-xs-1-4:nth-child(4n+1),
		.col-xs-1-5:nth-child(5n+1),
		.col-xs-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}
	}

	@include generate-columns($column-count, "xs");
}

// (sm) Small
@media (min-width: $sm-lower-bound) and (max-width: $sm-upper-bound) {
	.grid-fixed-height {
		.col-sm-1-1,
		.col-sm-1-2:nth-child(2n+1),
		.col-sm-1-3:nth-child(3n+1),
		.col-sm-1-4:nth-child(4n+1),
		.col-sm-1-5:nth-child(5n+1),
		.col-sm-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}	
	}

	@include generate-columns($column-count, "sm");
}

// (md) Medium
@media (min-width: $md-lower-bound) and (max-width: $md-upper-bound) {
	.grid-fixed-height {
		.col-md-1-1,
		.col-md-1-2:nth-child(2n+1),
		.col-md-1-3:nth-child(3n+1),
		.col-md-1-4:nth-child(4n+1),
		.col-md-1-5:nth-child(5n+1),
		.col-md-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}
	}

	@include generate-columns($column-count, "md");
}

// (lg) Large
@media (min-width: $lg-lower-bound) and (max-width: $lg-upper-bound) {
	.grid-fixed-height {
		.col-lg-1-1,
		.col-lg-1-2:nth-child(2n+1),
		.col-lg-1-3:nth-child(3n+1),
		.col-lg-1-4:nth-child(4n+1),
		.col-lg-1-5:nth-child(5n+1),
		.col-lg-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}
	}

	@include generate-columns($column-count, "lg");
}

// (xl) Large
@media (min-width: $xl-lower-bound) and (max-width: $xl-upper-bound) {
	.grid-fixed-height {
		.col-xl-1-1,
		.col-xl-1-2:nth-child(2n+1),
		.col-xl-1-3:nth-child(3n+1),
		.col-xl-1-4:nth-child(4n+1),
		.col-xl-1-5:nth-child(5n+1),
		.col-xl-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}
	}

	@include generate-columns($column-count, "xl");
}

// (xxl) Large
@media (min-width: $xxl-lower-bound) {
	.grid-fixed-height {
		.col-xxl-1-1,
		.col-xxl-1-2:nth-child(2n+1),
		.col-xxl-1-3:nth-child(3n+1),
		.col-xxl-1-4:nth-child(4n+1),
		.col-xxl-1-5:nth-child(5n+1),
		.col-xxl-1-6:nth-child(6n+1) {
			content: '';
			display: table;
			clear: both;
		}
	}

	@include generate-columns($column-count, "xxl");
}